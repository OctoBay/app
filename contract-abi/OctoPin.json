{
  "contractName": "OctoPin",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_octobay",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "issuePins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_issueId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "pinIssue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_octobay",
          "type": "address"
        }
      ],
      "name": "updateOctobay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintOnPullRequestClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_octobay\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"issuePins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintOnPullRequestClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_issueId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pinIssue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_octobay\",\"type\":\"address\"}],\"name\":\"updateOctobay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/mkt/Projects/octobay/contracts/contracts/OctoPin.sol\":\"OctoPin\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"/home/mkt/Projects/octobay/contracts/contracts/OctoPin.sol\":{\"keccak256\":\"0x69290315f8e6c414ce88bee64b539ab151fdfe9b2fc68cc78481d05abbf72788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36cd9aa75ed5ccbf850f5b338cab4a6f29675deb568855ab647f3e9475307c80\",\"dweb:/ipfs/QmVNfsr377r7as3XkCiFJv6ppn2GLjNZ41vMSjCsQPaPni\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xcbd85c86627a47fd939f1f4ee3ba626575ff2a182e1804b29f5136394449b538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53c6a80c519bb9356aad28efa9a1ec31603860eb759d2dc57f545fcae1dd1aca\",\"dweb:/ipfs/QmfRS6TtMNUHhvgLHXK21qKNnpn2S7g2Yd1fKaHKyFiJsR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001343380380620013438339810160408190526200003491620001cd565b604080518082018252600781526627b1ba37a834b760c91b60208083019182528351808501909452600484526327a824a760e11b9084015281519192916200007f9160039162000131565b5080516200009590600490602084019062000131565b50506005805460ff19166012179055506000620000b16200012d565b60058054610100600160a81b0319166101006001600160a01b03841690810291909117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600780546001600160a01b0319166001600160a01b0392909216919091179055620001fd565b3390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017457805160ff1916838001178555620001a4565b82800160010185558215620001a4579182015b82811115620001a457825182559160200191906001019062000187565b50620001b2929150620001b6565b5090565b5b80821115620001b25760008155600101620001b7565b600060208284031215620001df578081fd5b81516001600160a01b0381168114620001f6578182fd5b9392505050565b611136806200020d6000396000f3fe608060405234801561001057600080fd5b50600436106100f65760003560e01c80638da5cb5b116100925780638da5cb5b146101b957806395d89b41146101ce578063a457c2d7146101d6578063a9059cbb146101e9578063a9c8ce6f146101fc578063cf5f5f461461020f578063dd62ed3e14610222578063f2fde38b14610235578063f68fb07514610248576100f6565b806306fdde03146100fb578063095ea7b31461011957806318160ddd1461013957806323b872dd1461014e578063313ce56714610161578063395093511461017657806370a0823114610189578063715018a61461019c57806384f8f644146101a6575b600080fd5b61010361025b565b6040516101109190610d4a565b60405180910390f35b61012c610127366004610c67565b6102f1565b6040516101109190610d3f565b61014161030f565b6040516101109190610fec565b61012c61015c366004610c27565b610315565b61016961039c565b6040516101109190610ff5565b61012c610184366004610c67565b6103a5565b610141610197366004610bd8565b6103f3565b6101a461040e565b005b6101a46101b4366004610ccc565b6104a1565b6101c16104f6565b6040516101109190610d2b565b61010361050a565b61012c6101e4366004610c67565b61056b565b61012c6101f7366004610c67565b6105d3565b6101a461020a366004610bd8565b6105e7565b61014161021d366004610c91565b610643565b610141610230366004610bf3565b610660565b6101a4610243366004610bd8565b61068b565b6101a4610256366004610c67565b610752565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e75780601f106102bc576101008083540402835291602001916102e7565b820191906000526020600020905b8154815290600101906020018083116102ca57829003601f168201915b5050505050905090565b60006103056102fe610777565b848461077b565b5060015b92915050565b60025490565b600061032284848461082f565b6103928461032e610777565b61038d85604051806060016040528060288152602001611094602891396001600160a01b038a1660009081526001602052604081209061036c610777565b6001600160a01b031681526020810191909152604001600020549190610932565b61077b565b5060019392505050565b60055460ff1690565b60006103056103b2610777565b8461038d85600160006103c3610777565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061095e565b6001600160a01b031660009081526020819052604090205490565b610416610777565b60055461010090046001600160a01b039081169116146104515760405162461bcd60e51b815260040161044890610eb6565b60405180910390fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b600081116104c15760405162461bcd60e51b815260040161044890610dc0565b6104cb338261098a565b806006836040516104dc9190610d0f565b908152604051908190036020019020805490910190555050565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e75780601f106102bc576101008083540402835291602001916102e7565b6000610305610578610777565b8461038d856040518060600160405280602581526020016110dc60259139600160006105a2610777565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610932565b60006103056105e0610777565b848461082f565b6105ef610777565b60055461010090046001600160a01b039081169116146106215760405162461bcd60e51b815260040161044890610eb6565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b805160208183018101805160068252928201919093012091525481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610693610777565b60055461010090046001600160a01b039081169116146106c55760405162461bcd60e51b815260040161044890610eb6565b6001600160a01b0381166106eb5760405162461bcd60e51b815260040161044890610df7565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6007546001600160a01b0316331461076957600080fd5b6107738282610a5a565b5050565b3390565b6001600160a01b0383166107a15760405162461bcd60e51b815260040161044890610f71565b6001600160a01b0382166107c75760405162461bcd60e51b815260040161044890610e3d565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610822908590610fec565b60405180910390a3505050565b6001600160a01b0383166108555760405162461bcd60e51b815260040161044890610f2c565b6001600160a01b03821661087b5760405162461bcd60e51b815260040161044890610d7d565b610886838383610afc565b6108c38160405180606001604052806026815260200161106e602691396001600160a01b0386166000908152602081905260409020549190610932565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f2908261095e565b6001600160a01b0380841660008181526020819052604090819020939093559151908516906000805160206110bc83398151915290610822908590610fec565b600081848411156109565760405162461bcd60e51b81526004016104489190610d4a565b505050900390565b6000828201838110156109835760405162461bcd60e51b815260040161044890610e7f565b9392505050565b6001600160a01b0382166109b05760405162461bcd60e51b815260040161044890610eeb565b6109bc82600083610afc565b6109f98160405180606001604052806022815260200161104c602291396001600160a01b0385166000908152602081905260409020549190610932565b6001600160a01b038316600090815260208190526040902055600254610a1f9082610b01565b6002556040516000906001600160a01b038416906000805160206110bc83398151915290610a4e908590610fec565b60405180910390a35050565b6001600160a01b038216610a805760405162461bcd60e51b815260040161044890610fb5565b610a8c60008383610afc565b600254610a99908261095e565b6002556001600160a01b038216600090815260208190526040902054610abf908261095e565b6001600160a01b0383166000818152602081905260408082209390935591519091906000805160206110bc83398151915290610a4e908590610fec565b505050565b600061098383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610932565b80356001600160a01b038116811461030957600080fd5b600082601f830112610b6a578081fd5b813567ffffffffffffffff80821115610b81578283fd5b604051601f8301601f191681016020018281118282101715610ba1578485fd5b604052828152925082848301602001861015610bbc57600080fd5b8260208601602083013760006020848301015250505092915050565b600060208284031215610be9578081fd5b6109838383610b43565b60008060408385031215610c05578081fd5b610c0f8484610b43565b9150610c1e8460208501610b43565b90509250929050565b600080600060608486031215610c3b578081fd5b8335610c4681611033565b92506020840135610c5681611033565b929592945050506040919091013590565b60008060408385031215610c79578182fd5b610c838484610b43565b946020939093013593505050565b600060208284031215610ca2578081fd5b813567ffffffffffffffff811115610cb8578182fd5b610cc484828501610b5a565b949350505050565b60008060408385031215610cde578182fd5b823567ffffffffffffffff811115610cf4578283fd5b610d0085828601610b5a565b95602094909401359450505050565b60008251610d21818460208701611003565b9190910192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602082528251806020840152610d69816040850160208701611003565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252601c908201527f416d6f756e74206d7573742062652067726561746572207a65726f2e00000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60005b8381101561101e578181015183820152602001611006565b8381111561102d576000848401525b50505050565b6001600160a01b038116811461104857600080fd5b5056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209e0a0980e0dfd8b7f63012919a8076e0a7afd05e430a3efeaeb89127e7f5d41c64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f65760003560e01c80638da5cb5b116100925780638da5cb5b146101b957806395d89b41146101ce578063a457c2d7146101d6578063a9059cbb146101e9578063a9c8ce6f146101fc578063cf5f5f461461020f578063dd62ed3e14610222578063f2fde38b14610235578063f68fb07514610248576100f6565b806306fdde03146100fb578063095ea7b31461011957806318160ddd1461013957806323b872dd1461014e578063313ce56714610161578063395093511461017657806370a0823114610189578063715018a61461019c57806384f8f644146101a6575b600080fd5b61010361025b565b6040516101109190610d4a565b60405180910390f35b61012c610127366004610c67565b6102f1565b6040516101109190610d3f565b61014161030f565b6040516101109190610fec565b61012c61015c366004610c27565b610315565b61016961039c565b6040516101109190610ff5565b61012c610184366004610c67565b6103a5565b610141610197366004610bd8565b6103f3565b6101a461040e565b005b6101a46101b4366004610ccc565b6104a1565b6101c16104f6565b6040516101109190610d2b565b61010361050a565b61012c6101e4366004610c67565b61056b565b61012c6101f7366004610c67565b6105d3565b6101a461020a366004610bd8565b6105e7565b61014161021d366004610c91565b610643565b610141610230366004610bf3565b610660565b6101a4610243366004610bd8565b61068b565b6101a4610256366004610c67565b610752565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e75780601f106102bc576101008083540402835291602001916102e7565b820191906000526020600020905b8154815290600101906020018083116102ca57829003601f168201915b5050505050905090565b60006103056102fe610777565b848461077b565b5060015b92915050565b60025490565b600061032284848461082f565b6103928461032e610777565b61038d85604051806060016040528060288152602001611094602891396001600160a01b038a1660009081526001602052604081209061036c610777565b6001600160a01b031681526020810191909152604001600020549190610932565b61077b565b5060019392505050565b60055460ff1690565b60006103056103b2610777565b8461038d85600160006103c3610777565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061095e565b6001600160a01b031660009081526020819052604090205490565b610416610777565b60055461010090046001600160a01b039081169116146104515760405162461bcd60e51b815260040161044890610eb6565b60405180910390fd5b60055460405160009161010090046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a360058054610100600160a81b0319169055565b600081116104c15760405162461bcd60e51b815260040161044890610dc0565b6104cb338261098a565b806006836040516104dc9190610d0f565b908152604051908190036020019020805490910190555050565b60055461010090046001600160a01b031690565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102e75780601f106102bc576101008083540402835291602001916102e7565b6000610305610578610777565b8461038d856040518060600160405280602581526020016110dc60259139600160006105a2610777565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610932565b60006103056105e0610777565b848461082f565b6105ef610777565b60055461010090046001600160a01b039081169116146106215760405162461bcd60e51b815260040161044890610eb6565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b805160208183018101805160068252928201919093012091525481565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610693610777565b60055461010090046001600160a01b039081169116146106c55760405162461bcd60e51b815260040161044890610eb6565b6001600160a01b0381166106eb5760405162461bcd60e51b815260040161044890610df7565b6005546040516001600160a01b0380841692610100900416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b6007546001600160a01b0316331461076957600080fd5b6107738282610a5a565b5050565b3390565b6001600160a01b0383166107a15760405162461bcd60e51b815260040161044890610f71565b6001600160a01b0382166107c75760405162461bcd60e51b815260040161044890610e3d565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610822908590610fec565b60405180910390a3505050565b6001600160a01b0383166108555760405162461bcd60e51b815260040161044890610f2c565b6001600160a01b03821661087b5760405162461bcd60e51b815260040161044890610d7d565b610886838383610afc565b6108c38160405180606001604052806026815260200161106e602691396001600160a01b0386166000908152602081905260409020549190610932565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546108f2908261095e565b6001600160a01b0380841660008181526020819052604090819020939093559151908516906000805160206110bc83398151915290610822908590610fec565b600081848411156109565760405162461bcd60e51b81526004016104489190610d4a565b505050900390565b6000828201838110156109835760405162461bcd60e51b815260040161044890610e7f565b9392505050565b6001600160a01b0382166109b05760405162461bcd60e51b815260040161044890610eeb565b6109bc82600083610afc565b6109f98160405180606001604052806022815260200161104c602291396001600160a01b0385166000908152602081905260409020549190610932565b6001600160a01b038316600090815260208190526040902055600254610a1f9082610b01565b6002556040516000906001600160a01b038416906000805160206110bc83398151915290610a4e908590610fec565b60405180910390a35050565b6001600160a01b038216610a805760405162461bcd60e51b815260040161044890610fb5565b610a8c60008383610afc565b600254610a99908261095e565b6002556001600160a01b038216600090815260208190526040902054610abf908261095e565b6001600160a01b0383166000818152602081905260408082209390935591519091906000805160206110bc83398151915290610a4e908590610fec565b505050565b600061098383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610932565b80356001600160a01b038116811461030957600080fd5b600082601f830112610b6a578081fd5b813567ffffffffffffffff80821115610b81578283fd5b604051601f8301601f191681016020018281118282101715610ba1578485fd5b604052828152925082848301602001861015610bbc57600080fd5b8260208601602083013760006020848301015250505092915050565b600060208284031215610be9578081fd5b6109838383610b43565b60008060408385031215610c05578081fd5b610c0f8484610b43565b9150610c1e8460208501610b43565b90509250929050565b600080600060608486031215610c3b578081fd5b8335610c4681611033565b92506020840135610c5681611033565b929592945050506040919091013590565b60008060408385031215610c79578182fd5b610c838484610b43565b946020939093013593505050565b600060208284031215610ca2578081fd5b813567ffffffffffffffff811115610cb8578182fd5b610cc484828501610b5a565b949350505050565b60008060408385031215610cde578182fd5b823567ffffffffffffffff811115610cf4578283fd5b610d0085828601610b5a565b95602094909401359450505050565b60008251610d21818460208701611003565b9190910192915050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602082528251806020840152610d69816040850160208701611003565b601f01601f19169190910160400192915050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b6020808252601c908201527f416d6f756e74206d7573742062652067726561746572207a65726f2e00000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60005b8381101561101e578181015183820152602001611006565b8381111561102d576000848401525b50505050565b6001600160a01b038116811461104857600080fd5b5056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212209e0a0980e0dfd8b7f63012919a8076e0a7afd05e430a3efeaeb89127e7f5d41c64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "201:902:3:-:0;;;381:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1956:145:50;;;;;;;;;;;-1:-1:-1;;;1956:145:50;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1956:145:50;;;;2030:13;;1956:145;;;2030:13;;:5;;:13;:::i;:::-;-1:-1:-1;2053:17:50;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2080:9:50;:14;;-1:-1:-1;;2080:14:50;2092:2;2080:14;;;-1:-1:-1;2080:9:50;902:12:47;:10;:12::i;:::-;924:6;:18;;-1:-1:-1;;;;;;924:18:47;;-1:-1:-1;;;;;924:18:47;;;;;;;;;;;;957:43;;924:18;;-1:-1:-1;924:18:47;-1:-1:-1;;957:43:47;;-1:-1:-1;;957:43:47;-1:-1:-1;453:7:3::1;:18:::0;;-1:-1:-1;;;;;;453:18:3::1;-1:-1:-1::0;;;;;453:18:3;;;::::1;::::0;;;::::1;::::0;;201:902;;598:104:46;685:10;598:104;:::o;201:902:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;201:902:3;;;-1:-1:-1;201:902:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;146:263:-1;;261:2;249:9;240:7;236:23;232:32;229:2;;;-1:-1;;267:12;229:2;83:13;;-1:-1;;;;;576:54;;701:35;;691:2;;-1:-1;;740:12;691:2;319:74;223:186;-1:-1;;;223:186::o;:::-;201:902:3;;;;;;",
  "deployedSourceMap": "201:902:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3209:98::-;;;:::i;:::-;;;;;;;:::i;4835:317::-;;;;;;:::i;:::-;;:::i;3068:81::-;;;:::i;:::-;;;;;;;:::i;5547:215::-;;;;;;:::i;:::-;;:::i;3365:117::-;;;;;;:::i;:::-;;:::i;1706:145:47:-;;;:::i;:::-;;484:211:3;;;;;;:::i;:::-;;:::i;1083:77:47:-;;;:::i;:::-;;;;;;;:::i;2360:85:50:-;;;:::i;6249:266::-;;;;;;:::i;:::-;;:::i;3685:172::-;;;;;;:::i;:::-;;:::i;786:95:3:-;;;;;;:::i;:::-;;:::i;242:43::-;;;;;;:::i;:::-;;:::i;3915:149:50:-;;;;;;:::i;:::-;;:::i;2000:240:47:-;;;;;;:::i;:::-;;:::i;887:151:3:-;;;;;;:::i;:::-;;:::i;2166:81:50:-;2235:5;2228:12;;;;;;;;-1:-1:-1;;2228:12:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:13;;2228:12;;2235:5;;2228:12;;2235:5;2228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2166:81;:::o;4202:166::-;4285:4;4301:39;4310:12;:10;:12::i;:::-;4324:7;4333:6;4301:8;:39::i;:::-;-1:-1:-1;4357:4:50;4202:166;;;;;:::o;3209:98::-;3288:12;;3209:98;:::o;4835:317::-;4941:4;4957:36;4967:6;4975:9;4986:6;4957:9;:36::i;:::-;5003:121;5012:6;5020:12;:10;:12::i;:::-;5034:89;5072:6;5034:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5034:19:50;;;;;;:11;:19;;;;;;5054:12;:10;:12::i;:::-;-1:-1:-1;;;;;5034:33:50;;;;;;;;;;;;-1:-1:-1;5034:33:50;;;:89;:37;:89::i;:::-;5003:8;:121::i;:::-;-1:-1:-1;5141:4:50;4835:317;;;;;:::o;3068:81::-;3133:9;;;;3068:81;:::o;5547:215::-;5635:4;5651:83;5660:12;:10;:12::i;:::-;5674:7;5683:50;5722:10;5683:11;:25;5695:12;:10;:12::i;:::-;-1:-1:-1;;;;;5683:25:50;;;;;;;;;;;;;;;;;-1:-1:-1;5683:25:50;;;:34;;;;;;;;;;;:38;:50::i;3365:117::-;-1:-1:-1;;;;;3457:18:50;3431:7;3457:18;;;;;;;;;;;;3365:117::o;1706:145:47:-;1297:12;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:47;;;:22;;;1279:67;;;;-1:-1:-1;;;1279:67:47;;;;;;;:::i;:::-;;;;;;;;;1796:6:::1;::::0;1775:40:::1;::::0;1812:1:::1;::::0;1796:6:::1;::::0;::::1;-1:-1:-1::0;;;;;1796:6:47::1;::::0;1775:40:::1;::::0;1812:1;;1775:40:::1;1825:6;:19:::0;;-1:-1:-1;;;;;;1825:19:47::1;::::0;;1706:145::o;484:211:3:-;578:1;568:7;:11;560:52;;;;-1:-1:-1;;;560:52:3;;;;;;;:::i;:::-;622:26;628:10;640:7;622:5;:26::i;:::-;681:7;658:9;668:8;658:19;;;;;;:::i;:::-;;;;;;;;;;;;;;:30;;;;;;;-1:-1:-1;;484:211:3:o;1083:77:47:-;1147:6;;;;;-1:-1:-1;;;;;1147:6:47;;1083:77::o;2360:85:50:-;2431:7;2424:14;;;;;;;;-1:-1:-1;;2424:14:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2399:13;;2424:14;;2431:7;;2424:14;;2431:7;2424:14;;;;;;;;;;;;;;;;;;;;;;;;6249:266;6342:4;6358:129;6367:12;:10;:12::i;:::-;6381:7;6390:96;6429:15;6390:96;;;;;;;;;;;;;;;;;:11;:25;6402:12;:10;:12::i;:::-;-1:-1:-1;;;;;6390:25:50;;;;;;;;;;;;;;;;;-1:-1:-1;6390:25:50;;;:34;;;;;;;;;;;:96;:38;:96::i;3685:172::-;3771:4;3787:42;3797:12;:10;:12::i;:::-;3811:9;3822:6;3787:9;:42::i;786:95:3:-;1297:12:47;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:47;;;:22;;;1279:67;;;;-1:-1:-1;;;1279:67:47;;;;;;;:::i;:::-;856:7:3::1;:18:::0;;-1:-1:-1;;;;;;856:18:3::1;-1:-1:-1::0;;;;;856:18:3;;;::::1;::::0;;;::::1;::::0;;786:95::o;242:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3915:149:50:-;-1:-1:-1;;;;;4030:18:50;;;4004:7;4030:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3915:149::o;2000:240:47:-;1297:12;:10;:12::i;:::-;1287:6;;;;;-1:-1:-1;;;;;1287:6:47;;;:22;;;1279:67;;;;-1:-1:-1;;;1279:67:47;;;;;;;:::i;:::-;-1:-1:-1;;;;;2088:22:47;::::1;2080:73;;;;-1:-1:-1::0;;;2080:73:47::1;;;;;;;:::i;:::-;2189:6;::::0;2168:38:::1;::::0;-1:-1:-1;;;;;2168:38:47;;::::1;::::0;2189:6:::1;::::0;::::1;;::::0;2168:38:::1;::::0;;;::::1;2216:6;:17:::0;;-1:-1:-1;;;;;2216:17:47;;::::1;;;-1:-1:-1::0;;;;;;2216:17:47;;::::1;::::0;;;::::1;::::0;;2000:240::o;887:151:3:-;754:7;;-1:-1:-1;;;;;754:7:3;740:10;:21;732:30;;;;;;1006:25:::1;1012:9;1023:7;1006:5;:25::i;:::-;887:151:::0;;:::o;598:104:46:-;685:10;598:104;:::o;9313:340:50:-;-1:-1:-1;;;;;9414:19:50;;9406:68;;;;-1:-1:-1;;;9406:68:50;;;;;;;:::i;:::-;-1:-1:-1;;;;;9492:21:50;;9484:68;;;;-1:-1:-1;;;9484:68:50;;;;;;;:::i;:::-;-1:-1:-1;;;;;9563:18:50;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;9614:32;;;;;9593:6;;9614:32;:::i;:::-;;;;;;;;9313:340;;;:::o;6989:530::-;-1:-1:-1;;;;;7094:20:50;;7086:70;;;;-1:-1:-1;;;7086:70:50;;;;;;;:::i;:::-;-1:-1:-1;;;;;7174:23:50;;7166:71;;;;-1:-1:-1;;;7166:71:50;;;;;;;:::i;:::-;7248:47;7269:6;7277:9;7288:6;7248:20;:47::i;:::-;7326:71;7348:6;7326:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7326:17:50;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7306:17:50;;;:9;:17;;;;;;;;;;;:91;;;;7430:20;;;;;;;:32;;7455:6;7430:24;:32::i;:::-;-1:-1:-1;;;;;7407:20:50;;;:9;:20;;;;;;;;;;;;:55;;;;7477:35;;;;;;-1:-1:-1;;;;;;;;;;;7477:35:50;;;7505:6;;7477:35;:::i;1754:187:49:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:49;;;;;;;;:::i;:::-;-1:-1:-1;;;1910:5:49;;;1754:187::o;882:176::-;940:7;971:5;;;994:6;;;;986:46;;;;-1:-1:-1;;;986:46:49;;;;;;;:::i;:::-;1050:1;882:176;-1:-1:-1;;;882:176:49:o;8480:410:50:-;-1:-1:-1;;;;;8563:21:50;;8555:67;;;;-1:-1:-1;;;8555:67:50;;;;;;;:::i;:::-;8633:49;8654:7;8671:1;8675:6;8633:20;:49::i;:::-;8714:68;8737:6;8714:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8714:18:50;;:9;:18;;;;;;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;8693:18:50;;:9;:18;;;;;;;;;;:89;8807:12;;:24;;8824:6;8807:16;:24::i;:::-;8792:12;:39;8846:37;;8872:1;;-1:-1:-1;;;;;8846:37:50;;;-1:-1:-1;;;;;;;;;;;8846:37:50;;;8876:6;;8846:37;:::i;:::-;;;;;;;;8480:410;;:::o;7790:370::-;-1:-1:-1;;;;;7873:21:50;;7865:65;;;;-1:-1:-1;;;7865:65:50;;;;;;;:::i;:::-;7941:49;7970:1;7974:7;7983:6;7941:20;:49::i;:::-;8016:12;;:24;;8033:6;8016:16;:24::i;:::-;8001:12;:39;-1:-1:-1;;;;;8071:18:50;;:9;:18;;;;;;;;;;;:30;;8094:6;8071:22;:30::i;:::-;-1:-1:-1;;;;;8050:18:50;;:9;:18;;;;;;;;;;;:51;;;;8116:37;;8050:18;;:9;-1:-1:-1;;;;;;;;;;;8116:37:50;;;8146:6;;8116:37;:::i;10651:92::-;;;;:::o;1329:134:49:-;1387:7;1413:43;1417:1;1420;1413:43;;;;;;;;;;;;;;;;;:3;:43::i;5:130:-1:-;72:20;;-1:-1;;;;;14908:54;;15736:35;;15726:2;;15785:1;;15775:12;143:442;;245:3;238:4;230:6;226:17;222:27;212:2;;-1:-1;;253:12;212:2;300:6;287:20;14016:18;;14008:6;14005:30;14002:2;;;-1:-1;;14038:12;14002:2;13671;13665:9;14111;14092:17;;-1:-1;;14088:33;13697:17;;14179:4;13697:17;13757:34;;;13793:22;;;13754:62;13751:2;;;-1:-1;;13819:12;13751:2;13671;13838:22;393:21;;;313:74;-1:-1;313:74;493:16;;;14179:4;493:16;490:25;-1:-1;487:2;;;528:1;;518:12;487:2;15223:6;14179:4;435:6;431:17;14179:4;469:5;465:16;15200:30;15279:1;14179:4;15270:6;469:5;15261:16;;15254:27;;;;205:380;;;;:::o;730:241::-;;834:2;822:9;813:7;809:23;805:32;802:2;;;-1:-1;;840:12;802:2;902:53;947:7;923:22;902:53;:::i;978:366::-;;;1099:2;1087:9;1078:7;1074:23;1070:32;1067:2;;;-1:-1;;1105:12;1067:2;1167:53;1212:7;1188:22;1167:53;:::i;:::-;1157:63;;1275:53;1320:7;1257:2;1300:9;1296:22;1275:53;:::i;:::-;1265:63;;1061:283;;;;;:::o;1351:491::-;;;;1489:2;1477:9;1468:7;1464:23;1460:32;1457:2;;;-1:-1;;1495:12;1457:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;1547:63;-1:-1;1647:2;1686:22;;72:20;97:33;72:20;97:33;:::i;:::-;1451:391;;1655:63;;-1:-1;;;1755:2;1794:22;;;;660:20;;1451:391::o;1849:366::-;;;1970:2;1958:9;1949:7;1945:23;1941:32;1938:2;;;-1:-1;;1976:12;1938:2;2038:53;2083:7;2059:22;2038:53;:::i;:::-;2028:63;2128:2;2167:22;;;;660:20;;-1:-1;;;1932:283::o;2222:347::-;;2336:2;2324:9;2315:7;2311:23;2307:32;2304:2;;;-1:-1;;2342:12;2304:2;2400:17;2387:31;2438:18;2430:6;2427:30;2424:2;;;-1:-1;;2460:12;2424:2;2490:63;2545:7;2536:6;2525:9;2521:22;2490:63;:::i;:::-;2480:73;2298:271;-1:-1;;;;2298:271::o;2576:472::-;;;2707:2;2695:9;2686:7;2682:23;2678:32;2675:2;;;-1:-1;;2713:12;2675:2;2771:17;2758:31;2809:18;2801:6;2798:30;2795:2;;;-1:-1;;2831:12;2795:2;2861:63;2916:7;2907:6;2896:9;2892:22;2861:63;:::i;:::-;2851:73;2961:2;3000:22;;;;660:20;;-1:-1;;;;2669:379::o;7884:275::-;;3803:5;14289:12;3915:52;3960:6;3955:3;3948:4;3941:5;3937:16;3915:52;:::i;:::-;3979:16;;;;;8020:139;-1:-1;;8020:139::o;8166:222::-;-1:-1;;;;;14908:54;;;;3126:37;;8293:2;8278:18;;8264:124::o;8395:210::-;14820:13;;14813:21;3240:34;;8516:2;8501:18;;8487:118::o;8612:310::-;;8759:2;8780:17;8773:47;3431:5;14289:12;14446:6;8759:2;8748:9;8744:18;14434:19;3525:52;3570:6;14474:14;8748:9;14474:14;8759:2;3551:5;3547:16;3525:52;:::i;:::-;14111:9;15640:14;-1:-1;;15636:28;3589:39;;;;14474:14;3589:39;;8730:192;-1:-1;;8730:192::o;8929:416::-;9129:2;9143:47;;;4232:2;9114:18;;;14434:19;4268:34;14474:14;;;4248:55;-1:-1;;;4323:12;;;4316:27;4362:12;;;9100:245::o;9352:416::-;9552:2;9566:47;;;4613:2;9537:18;;;14434:19;4649:30;14474:14;;;4629:51;4699:12;;;9523:245::o;9775:416::-;9975:2;9989:47;;;4950:2;9960:18;;;14434:19;4986:34;14474:14;;;4966:55;-1:-1;;;5041:12;;;5034:30;5083:12;;;9946:245::o;10198:416::-;10398:2;10412:47;;;5334:2;10383:18;;;14434:19;5370:34;14474:14;;;5350:55;-1:-1;;;5425:12;;;5418:26;5463:12;;;10369:245::o;10621:416::-;10821:2;10835:47;;;5714:2;10806:18;;;14434:19;5750:29;14474:14;;;5730:50;5799:12;;;10792:245::o;11044:416::-;11244:2;11258:47;;;11229:18;;;14434:19;6086:34;14474:14;;;6066:55;6140:12;;;11215:245::o;11467:416::-;11667:2;11681:47;;;6391:2;11652:18;;;14434:19;6427:34;14474:14;;;6407:55;-1:-1;;;6482:12;;;6475:25;6519:12;;;11638:245::o;11890:416::-;12090:2;12104:47;;;6770:2;12075:18;;;14434:19;6806:34;14474:14;;;6786:55;-1:-1;;;6861:12;;;6854:29;6902:12;;;12061:245::o;12313:416::-;12513:2;12527:47;;;7153:2;12498:18;;;14434:19;7189:34;14474:14;;;7169:55;-1:-1;;;7244:12;;;7237:28;7284:12;;;12484:245::o;12736:416::-;12936:2;12950:47;;;7535:2;12921:18;;;14434:19;7571:33;14474:14;;;7551:54;7624:12;;;12907:245::o;13159:222::-;7721:37;;;13286:2;13271:18;;13257:124::o;13388:214::-;15124:4;15113:16;;;;7837:35;;13511:2;13496:18;;13482:120::o;15296:268::-;15361:1;15368:101;15382:6;15379:1;15376:13;15368:101;;;15449:11;;;15443:18;15430:11;;;15423:39;15404:2;15397:10;15368:101;;;15484:6;15481:1;15478:13;15475:2;;;15361:1;15540:6;15535:3;15531:16;15524:27;15475:2;;15345:219;;;:::o;15677:117::-;-1:-1;;;;;14908:54;;15736:35;;15726:2;;15785:1;;15775:12;15726:2;15720:74;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\ncontract OctoPin is ERC20, Ownable {\n    mapping(string => uint256) public issuePins;\n\n    address octobay;\n    uint256 private registrationFee;\n    uint256 private claimFee;\n\n    constructor(address _octobay) public ERC20('OctoPin', 'OPIN') {\n        octobay = _octobay;\n    }\n\n    function pinIssue(string memory _issueId, uint256 _amount) public {\n        require(_amount > 0, 'Amount must be greater zero.');\n        _burn(msg.sender, _amount);\n        issuePins[_issueId] += _amount;\n    }\n\n    modifier onlyOctobay {\n        require(msg.sender == octobay);\n        _;\n    }\n\n    function updateOctobay(address _octobay) external onlyOwner {\n        octobay = _octobay;\n    }\n\n    function mintOnPullRequestClaim(address _receiver, uint256 _amount)\n        external\n        onlyOctobay\n    {\n        _mint(_receiver, _amount);\n    }\n\n    // TODO\n    // function mintOnIssueClaim() onlyOctobay {}\n}\n",
  "sourcePath": "/home/mkt/Projects/octobay/contracts/contracts/OctoPin.sol",
  "ast": {
    "absolutePath": "/home/mkt/Projects/octobay/contracts/contracts/OctoPin.sol",
    "exportedSymbols": {
      "OctoPin": [
        2127
      ]
    },
    "id": 2128,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2030,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "id": 2031,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2032,
        "nodeType": "ImportDirective",
        "scope": 2128,
        "sourceUnit": 8980,
        "src": "91:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2033,
        "nodeType": "ImportDirective",
        "scope": 2128,
        "sourceUnit": 8187,
        "src": "147:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2034,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8979,
              "src": "221:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$8979",
                "typeString": "contract ERC20"
              }
            },
            "id": 2035,
            "nodeType": "InheritanceSpecifier",
            "src": "221:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2036,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8186,
              "src": "228:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$8186",
                "typeString": "contract Ownable"
              }
            },
            "id": 2037,
            "nodeType": "InheritanceSpecifier",
            "src": "228:7:3"
          }
        ],
        "contractDependencies": [
          8077,
          8186,
          8979,
          9057
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2127,
        "linearizedBaseContracts": [
          2127,
          8186,
          8979,
          9057,
          8077
        ],
        "name": "OctoPin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "cf5f5f46",
            "id": 2041,
            "mutability": "mutable",
            "name": "issuePins",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2127,
            "src": "242:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 2040,
              "keyType": {
                "id": 2038,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "250:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "242:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 2039,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "260:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2043,
            "mutability": "mutable",
            "name": "octobay",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2127,
            "src": "292:15:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2042,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "292:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2045,
            "mutability": "mutable",
            "name": "registrationFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2127,
            "src": "313:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2044,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "313:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2047,
            "mutability": "mutable",
            "name": "claimFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2127,
            "src": "350:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2046,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "350:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2060,
              "nodeType": "Block",
              "src": "443:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "octobay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "453:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2057,
                      "name": "_octobay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "463:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "453:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2059,
                  "nodeType": "ExpressionStatement",
                  "src": "453:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 2061,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4f63746f50696e",
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "424:9:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bbf8697b30f32ce77f63db8fb16087b08b911a7779a85d89b8c0f368921dd1f0",
                      "typeString": "literal_string \"OctoPin\""
                    },
                    "value": "OctoPin"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4f50494e",
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "435:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d41930a7725e610c662e7eb1db04690b4a0526af6a6cc33d1b60de158bbca95f",
                      "typeString": "literal_string \"OPIN\""
                    },
                    "value": "OPIN"
                  }
                ],
                "id": 2054,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2051,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8979,
                  "src": "418:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$8979_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "418:24:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2049,
                  "mutability": "mutable",
                  "name": "_octobay",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2061,
                  "src": "393:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:18:3"
            },
            "returnParameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:0:3"
            },
            "scope": 2127,
            "src": "381:97:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2087,
              "nodeType": "Block",
              "src": "550:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2069,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2065,
                          "src": "568:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "578:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "568:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207a65726f2e",
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d60d102d27bd54ea1fc6f124703ab5286734ad49fb5b9a8743637149a92d448",
                          "typeString": "literal_string \"Amount must be greater zero.\""
                        },
                        "value": "Amount must be greater zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d60d102d27bd54ea1fc6f124703ab5286734ad49fb5b9a8743637149a92d448",
                          "typeString": "literal_string \"Amount must be greater zero.\""
                        }
                      ],
                      "id": 2068,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "560:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "560:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2076,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "628:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "628:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2078,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2065,
                        "src": "640:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2075,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8911,
                      "src": "622:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2080,
                  "nodeType": "ExpressionStatement",
                  "src": "622:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2081,
                        "name": "issuePins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "658:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 2083,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2082,
                        "name": "_issueId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2063,
                        "src": "668:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "658:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2084,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2065,
                      "src": "681:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "658:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2086,
                  "nodeType": "ExpressionStatement",
                  "src": "658:30:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "84f8f644",
            "id": 2088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pinIssue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2063,
                  "mutability": "mutable",
                  "name": "_issueId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2088,
                  "src": "502:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2088,
                  "src": "526:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "501:41:3"
            },
            "returnParameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "550:0:3"
            },
            "scope": 2127,
            "src": "484:211:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2098,
              "nodeType": "Block",
              "src": "722:58:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2091,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "740:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "740:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2093,
                          "name": "octobay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "754:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "740:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "732:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "732:30:3"
                },
                {
                  "id": 2097,
                  "nodeType": "PlaceholderStatement",
                  "src": "772:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 2099,
            "name": "onlyOctobay",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:0:3"
            },
            "src": "701:79:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "846:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2106,
                      "name": "octobay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "856:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2107,
                      "name": "_octobay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2101,
                      "src": "866:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "856:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "856:18:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a9c8ce6f",
            "id": 2111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2104,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2103,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8135,
                  "src": "836:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "836:9:3"
              }
            ],
            "name": "updateOctobay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "_octobay",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2111,
                  "src": "809:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "808:18:3"
            },
            "returnParameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:0:3"
            },
            "scope": 2127,
            "src": "786:95:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2125,
              "nodeType": "Block",
              "src": "996:42:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2121,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "1012:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2122,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "1023:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2120,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8855,
                      "src": "1006:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:25:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f68fb075",
            "id": 2126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2118,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2117,
                  "name": "onlyOctobay",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2099,
                  "src": "980:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "980:11:3"
              }
            ],
            "name": "mintOnPullRequestClaim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2113,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "919:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "938:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "918:36:3"
            },
            "returnParameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:3"
            },
            "scope": 2127,
            "src": "887:151:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2128,
        "src": "201:902:3"
      }
    ],
    "src": "32:1072:3"
  },
  "legacyAST": {
    "absolutePath": "/home/mkt/Projects/octobay/contracts/contracts/OctoPin.sol",
    "exportedSymbols": {
      "OctoPin": [
        2127
      ]
    },
    "id": 2128,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2030,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "id": 2031,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2032,
        "nodeType": "ImportDirective",
        "scope": 2128,
        "sourceUnit": 8980,
        "src": "91:55:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2033,
        "nodeType": "ImportDirective",
        "scope": 2128,
        "sourceUnit": 8187,
        "src": "147:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2034,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8979,
              "src": "221:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$8979",
                "typeString": "contract ERC20"
              }
            },
            "id": 2035,
            "nodeType": "InheritanceSpecifier",
            "src": "221:5:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2036,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8186,
              "src": "228:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$8186",
                "typeString": "contract Ownable"
              }
            },
            "id": 2037,
            "nodeType": "InheritanceSpecifier",
            "src": "228:7:3"
          }
        ],
        "contractDependencies": [
          8077,
          8186,
          8979,
          9057
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2127,
        "linearizedBaseContracts": [
          2127,
          8186,
          8979,
          9057,
          8077
        ],
        "name": "OctoPin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "cf5f5f46",
            "id": 2041,
            "mutability": "mutable",
            "name": "issuePins",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2127,
            "src": "242:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
              "typeString": "mapping(string => uint256)"
            },
            "typeName": {
              "id": 2040,
              "keyType": {
                "id": 2038,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "250:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "242:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                "typeString": "mapping(string => uint256)"
              },
              "valueType": {
                "id": 2039,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "260:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2043,
            "mutability": "mutable",
            "name": "octobay",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2127,
            "src": "292:15:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2042,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "292:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2045,
            "mutability": "mutable",
            "name": "registrationFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2127,
            "src": "313:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2044,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "313:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2047,
            "mutability": "mutable",
            "name": "claimFee",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2127,
            "src": "350:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2046,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "350:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2060,
              "nodeType": "Block",
              "src": "443:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2056,
                      "name": "octobay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "453:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2057,
                      "name": "_octobay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "463:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "453:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2059,
                  "nodeType": "ExpressionStatement",
                  "src": "453:18:3"
                }
              ]
            },
            "documentation": null,
            "id": 2061,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4f63746f50696e",
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "424:9:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bbf8697b30f32ce77f63db8fb16087b08b911a7779a85d89b8c0f368921dd1f0",
                      "typeString": "literal_string \"OctoPin\""
                    },
                    "value": "OctoPin"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4f50494e",
                    "id": 2053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "435:6:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d41930a7725e610c662e7eb1db04690b4a0526af6a6cc33d1b60de158bbca95f",
                      "typeString": "literal_string \"OPIN\""
                    },
                    "value": "OPIN"
                  }
                ],
                "id": 2054,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2051,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8979,
                  "src": "418:5:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$8979_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "418:24:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2049,
                  "mutability": "mutable",
                  "name": "_octobay",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2061,
                  "src": "393:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:18:3"
            },
            "returnParameters": {
              "id": 2055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:0:3"
            },
            "scope": 2127,
            "src": "381:97:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2087,
              "nodeType": "Block",
              "src": "550:145:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2069,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2065,
                          "src": "568:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "578:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "568:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416d6f756e74206d7573742062652067726561746572207a65726f2e",
                        "id": 2072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "581:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d60d102d27bd54ea1fc6f124703ab5286734ad49fb5b9a8743637149a92d448",
                          "typeString": "literal_string \"Amount must be greater zero.\""
                        },
                        "value": "Amount must be greater zero."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d60d102d27bd54ea1fc6f124703ab5286734ad49fb5b9a8743637149a92d448",
                          "typeString": "literal_string \"Amount must be greater zero.\""
                        }
                      ],
                      "id": 2068,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "560:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2074,
                  "nodeType": "ExpressionStatement",
                  "src": "560:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2076,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "628:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "628:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2078,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2065,
                        "src": "640:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2075,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8911,
                      "src": "622:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2080,
                  "nodeType": "ExpressionStatement",
                  "src": "622:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2081,
                        "name": "issuePins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2041,
                        "src": "658:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
                          "typeString": "mapping(string memory => uint256)"
                        }
                      },
                      "id": 2083,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2082,
                        "name": "_issueId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2063,
                        "src": "668:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "658:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2084,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2065,
                      "src": "681:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "658:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2086,
                  "nodeType": "ExpressionStatement",
                  "src": "658:30:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "84f8f644",
            "id": 2088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pinIssue",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2063,
                  "mutability": "mutable",
                  "name": "_issueId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2088,
                  "src": "502:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2065,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2088,
                  "src": "526:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "501:41:3"
            },
            "returnParameters": {
              "id": 2067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "550:0:3"
            },
            "scope": 2127,
            "src": "484:211:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2098,
              "nodeType": "Block",
              "src": "722:58:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2091,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "740:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "740:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2093,
                          "name": "octobay",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2043,
                          "src": "754:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "740:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2090,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "732:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2096,
                  "nodeType": "ExpressionStatement",
                  "src": "732:30:3"
                },
                {
                  "id": 2097,
                  "nodeType": "PlaceholderStatement",
                  "src": "772:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 2099,
            "name": "onlyOctobay",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 2089,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "722:0:3"
            },
            "src": "701:79:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2110,
              "nodeType": "Block",
              "src": "846:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2106,
                      "name": "octobay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2043,
                      "src": "856:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2107,
                      "name": "_octobay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2101,
                      "src": "866:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "856:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2109,
                  "nodeType": "ExpressionStatement",
                  "src": "856:18:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a9c8ce6f",
            "id": 2111,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2104,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2103,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8135,
                  "src": "836:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "836:9:3"
              }
            ],
            "name": "updateOctobay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "_octobay",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2111,
                  "src": "809:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "808:18:3"
            },
            "returnParameters": {
              "id": 2105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:0:3"
            },
            "scope": 2127,
            "src": "786:95:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2125,
              "nodeType": "Block",
              "src": "996:42:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2121,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "1012:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2122,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "1023:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2120,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8855,
                      "src": "1006:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2124,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:25:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f68fb075",
            "id": 2126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2118,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2117,
                  "name": "onlyOctobay",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2099,
                  "src": "980:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "980:11:3"
              }
            ],
            "name": "mintOnPullRequestClaim",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2113,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "919:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2126,
                  "src": "938:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "918:36:3"
            },
            "returnParameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:3"
            },
            "scope": 2127,
            "src": "887:151:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2128,
        "src": "201:902:3"
      }
    ],
    "src": "32:1072:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "1610899094085": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x5FD02C4c660C631c343961934d7f6E2EF9783fE7",
      "transactionHash": "0xe872f95aa4e511bff73a847a4e23ba68b90015cc03e19a151a3a8fee7f38b20d"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2021-01-17T18:26:10.345Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}